"""Recreate missing migration

Revision ID: 6622af8534cd
Revises: 
Create Date: 2024-08-06 22:09:06.113563

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6622af8534cd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Categories_pomodoro',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks_pomodoro',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('users')
    op.drop_index('ix_routes_id', table_name='routes')
    op.drop_table('routes')
    op.drop_table('hotels')
    op.drop_index('ix_participants_id', table_name='participants')
    op.drop_table('participants')
    op.drop_index('ix_users_2_email', table_name='users_2')
    op.drop_index('ix_users_2_id', table_name='users_2')
    op.drop_index('ix_users_2_username', table_name='users_2')
    op.drop_table('users_2')
    op.drop_index('ix_chat_messages_id', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index('ix_trips_id', table_name='trips')
    op.drop_index('ix_trips_name', table_name='trips')
    op.drop_table('trips')
    op.drop_index('ix_expenses_id', table_name='expenses')
    op.drop_table('expenses')
    op.drop_table('bookings')
    op.drop_table('rooms')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rooms',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('rooms_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('hotel_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('services', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hotel_id'], ['hotels.id'], name='rooms_hotel_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rooms_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('bookings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_from', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('date_to', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_cost', sa.INTEGER(), sa.Computed('((date_to - date_from) * price)', persisted=True), autoincrement=False, nullable=True),
    sa.Column('total_days', sa.INTEGER(), sa.Computed('(date_to - date_from)', persisted=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='bookings_room_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='bookings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bookings_pkey')
    )
    op.create_table('expenses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trip_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], name='expenses_trip_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='expenses_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='expenses_pkey')
    )
    op.create_index('ix_expenses_id', 'expenses', ['id'], unique=False)
    op.create_table('trips',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('trips_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='trips_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='trips_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_trips_name', 'trips', ['name'], unique=False)
    op.create_index('ix_trips_id', 'trips', ['id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trip_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], name='chat_messages_trip_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='chat_messages_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='chat_messages_pkey')
    )
    op.create_index('ix_chat_messages_id', 'chat_messages', ['id'], unique=False)
    op.create_table('users_2',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_2_pkey')
    )
    op.create_index('ix_users_2_username', 'users_2', ['username'], unique=True)
    op.create_index('ix_users_2_id', 'users_2', ['id'], unique=False)
    op.create_index('ix_users_2_email', 'users_2', ['email'], unique=True)
    op.create_table('participants',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trip_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], name='participants_trip_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='participants_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='participants_pkey')
    )
    op.create_index('ix_participants_id', 'participants', ['id'], unique=False)
    op.create_table('hotels',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('services', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('rooms_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='hotels_pkey')
    )
    op.create_table('routes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trip_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], name='routes_trip_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='routes_pkey')
    )
    op.create_index('ix_routes_id', 'routes', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.drop_table('tasks_pomodoro')
    op.drop_table('Categories_pomodoro')
    # ### end Alembic commands ###
